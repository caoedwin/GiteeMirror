# Generated by Django 2.1.7 on 2020-04-29 03:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app01', '0010_auto_20200325_1645'),
    ]

    operations = [
        migrations.CreateModel(
            name='CQM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer', models.CharField(choices=[('', ''), ('C38(NB)', 'C38(NB)'), ('C38(NB)-SMB', 'C38(NB)-SMB'), ('C38(AIO)', 'C38(AIO)'), ('A39', 'A39'), ('Others', 'Others')], max_length=100, verbose_name='Customer')),
                ('Project', models.CharField(max_length=100, verbose_name='Project')),
                ('Phase', models.CharField(max_length=100, verbose_name='Phase')),
                ('Material_Group', models.CharField(blank=True, max_length=100, null=True, verbose_name='Material_Group')),
                ('Keyparts', models.CharField(max_length=100, verbose_name='Keyparts')),
                ('Character', models.CharField(max_length=100, verbose_name='Character')),
                ('PID', models.CharField(blank=True, max_length=100, null=True, verbose_name='PID')),
                ('VID', models.CharField(blank=True, max_length=100, null=True, verbose_name='VID')),
                ('HW', models.CharField(blank=True, max_length=100, null=True, verbose_name='HW')),
                ('FW', models.CharField(blank=True, max_length=100, null=True, verbose_name='FW')),
                ('Supplier', models.CharField(blank=True, max_length=100, null=True, verbose_name='Supplier')),
                ('R1_PN_Description', models.CharField(blank=True, max_length=100, null=True, verbose_name='R1_PN_Description')),
                ('Compal_R1_PN', models.CharField(blank=True, max_length=100, null=True, verbose_name='Compal_R1_PN')),
                ('Compal_R3_PN', models.CharField(blank=True, max_length=100, null=True, verbose_name='Compal_R3_PN')),
                ('Reliability', models.CharField(blank=True, choices=[('', ''), ('Qd', 'Qd'), ('Qd_L', 'Qd_L'), ('Qd_C', 'Qd_C'), ('T', 'T'), ('F', 'F'), ('DisQ', 'DisQ'), ('Drpd', 'Drpd'), ('No Build', 'No Build')], max_length=100, null=True, verbose_name='Reliability')),
                ('Compatibility', models.CharField(blank=True, choices=[('', ''), ('Qd', 'Qd'), ('Qd_L', 'Qd_L'), ('Qd_C', 'Qd_C'), ('T', 'T'), ('F', 'F'), ('DisQ', 'DisQ'), ('Drpd', 'Drpd'), ('No Build', 'No Build')], max_length=100, null=True, verbose_name='Compatibility')),
                ('Testresult', models.CharField(blank=True, choices=[('', ''), ('Qd', 'Qd'), ('Qd_L', 'Qd_L'), ('Qd_C', 'Qd_C'), ('T', 'T'), ('F', 'F'), ('DisQ', 'DisQ'), ('Drpd', 'Drpd'), ('No Build', 'No Build')], max_length=100, null=True, verbose_name='Testresult')),
                ('ESD', models.CharField(blank=True, max_length=100, null=True, verbose_name='ESD')),
                ('EMI', models.CharField(blank=True, max_length=100, null=True, verbose_name='EMI')),
                ('RF', models.CharField(blank=True, max_length=100, null=True, verbose_name='RF')),
                ('RD1', models.CharField(blank=True, max_length=100, null=True, verbose_name='RD1')),
                ('RD2', models.CharField(blank=True, max_length=100, null=True, verbose_name='RD2')),
                ('RD3', models.CharField(blank=True, max_length=100, null=True, verbose_name='RD3')),
                ('RD4', models.CharField(blank=True, max_length=100, null=True, verbose_name='RD4')),
                ('RD5', models.CharField(blank=True, max_length=100, null=True, verbose_name='RD5')),
                ('RD6', models.CharField(blank=True, max_length=100, null=True, verbose_name='RD6')),
                ('PMsummary', models.CharField(blank=True, max_length=100, null=True, verbose_name='PMsummary')),
                ('Controlrun', models.CharField(blank=True, max_length=100, null=True, verbose_name='Controlrun')),
                ('Comments', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Comments')),
                ('editor', models.CharField(max_length=100, verbose_name='editor')),
                ('edit_time', models.CharField(max_length=26, verbose_name='edit_time')),
            ],
            options={
                'verbose_name': 'CQM',
                'verbose_name_plural': 'CQM',
            },
        ),
        migrations.CreateModel(
            name='CQM_history',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Changecontent', models.CharField(max_length=3000, verbose_name='Changecontent')),
                ('Changeto', models.CharField(max_length=3000, verbose_name='Changecontent')),
                ('Changeowner', models.CharField(max_length=100, verbose_name='Changeowner')),
                ('Change_time', models.CharField(max_length=26, verbose_name='Change_time')),
                ('Changeid', models.ForeignKey(on_delete=True, to='CQM.CQM')),
            ],
            options={
                'verbose_name': 'CQM_history',
                'verbose_name_plural': 'CQM_history',
            },
        ),
        migrations.CreateModel(
            name='CQMProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer', models.CharField(choices=[('', ''), ('C38(NB)', 'C38(NB)'), ('C38(NB)-SMB', 'C38(NB)-SMB'), ('C38(AIO)', 'C38(AIO)'), ('A39', 'A39'), ('Others', 'Others')], max_length=20, verbose_name='Customer')),
                ('Project', models.CharField(max_length=20, verbose_name='Project')),
                ('Owner', models.ManyToManyField(to='app01.UserInfo')),
            ],
            options={
                'verbose_name': 'CQMProject',
                'verbose_name_plural': 'CQMProject',
            },
        ),
        migrations.AddField(
            model_name='cqm',
            name='Projectinfo',
            field=models.ForeignKey(on_delete=True, to='CQM.CQMProject'),
        ),
    ]
