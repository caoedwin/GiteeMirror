# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Progress.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
class UI_Progress(object):
    # def __init__(self, *args, **kwargs):
    #     super().__init__(*args, **kwargs)
    #     self.setupUi(self)

        # self.setAttribute(Qt.WA_TranslucentBackground)  # 窗体背景透明
        # self.setWindowFlags(Qt.WindowStaysOnTopHint | Qt.FramelessWindowHint | Qt.Tool)  # 窗口置顶，无边框，在任务栏不显示图标
    def setupUi(self, UI_Progress):
        UI_Progress.setObjectName("MainWindow")
        UI_Progress.resize(720, 153)
        self.centralwidget = QtWidgets.QWidget(UI_Progress)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(-10, 0, 731, 101))
        self.frame.setStyleSheet("QFrame {    background-color: rgb(56, 58, 89);    \n"
                                 "    color: rgb(220, 220, 220);\n"
                                 "    border-radius: 10px;\n"
                                 "}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.textEdit = QtWidgets.QTextEdit(self.frame)
        self.textEdit.setGeometry(QtCore.QRect(300, 0, 171, 61))
        self.textEdit.setObjectName("textEdit")
        self.progressBar = QtWidgets.QProgressBar(self.frame)
        self.progressBar.setGeometry(QtCore.QRect(90, 50, 571, 23))
        self.progressBar.setStyleSheet("QProgressBar{\n"
                                       "\n"
                                       "    background-color:rgb(98,114,164);\n"
                                       "    color:rgb(200,200,200);\n"
                                       "    border-style:none;\n"
                                       "    border-radius:10px;\n"
                                       "    text-align:center;\n"
                                       "}\n"
                                       "QProgressBar::chunk{\n"
                                       "\n"
                                       "    border-radius:10px;\n"
                                       "    background-color:qlineargradient(spread:pad,x1:0,\n"
                                       "y1:0.511364, x2:1, y2:0523, stop:0 rgba(254,121,199,\n"
                                       "255),stop:1 rgba(170,85,255,255));\n"
                                       "}")
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        UI_Progress.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(UI_Progress)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 720, 26))
        self.menubar.setObjectName("menubar")
        UI_Progress.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(UI_Progress)
        self.statusbar.setObjectName("statusbar")
        UI_Progress.setStatusBar(self.statusbar)

        self.retranslateUi(UI_Progress)
        QtCore.QMetaObject.connectSlotsByName(UI_Progress)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textEdit.setHtml(_translate("MainWindow",
                                         "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                         "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                         "p, li { white-space: pre-wrap; }\n"
                                         "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                         "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'LiSu\'; font-size:26pt; color:#fe79c7;\">运行中</span></p></body></html>"))

    def set_loader(self):#定时器每100ms运行一次，触发函数 load_progress_bar
        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.load_progress_bar)
        self.timer.start(80)

    def load_progress_bar(self):#load_progress_bar 进度条自动加1，直到100%
        self.progressBar.setValue(self.progressBar.value() + 1)
        # self.label_title.setStyleSheet(f"color: rgb(254, {self.cont_label_title[0]}, 199);")
        # self.label_description.setStyleSheet(f"color: rgb(98, {self.cont_label_title[1]}, 164);")
        # self.cont_label_title[0] += 1
        # self.cont_label_title[1] += 1
        if self.progressBar.value() >= 100:
            print('yyy')
            # self.UI_Progress.close()
            # self.open_table_main()
            # from Excel_InputAIO import Ui_MainWindow
            # Ui_MainWindow.doexcel()
            self.timer.stop()
            # return True
            # self.MainWindow.close()
    # def open_table_main(self):
    #     from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QMessageBox
    #
    #     QMessageBox.information(self, 'Excel转化', '%s-%s模板转换已完成',
    #                             QMessageBox.Ok)  # 1




# -*- coding: utf-8 -*-

import PyQt5

import sys

from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *



class MyWindow(QMainWindow, UI_Progress):
# class MyWindow(UI_Progress):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.setupUi(self)

        self.setAttribute(Qt.WA_TranslucentBackground)  # 窗体背景透明
        self.setWindowFlags(Qt.WindowStaysOnTopHint | Qt.FramelessWindowHint | Qt.Tool)  # 窗口置顶，无边框，在任务栏不显示图标

    # def mouseMoveEvent(self, e: QMouseEvent):  # 重写移动事件
    #     if self._tracking:
    #         self._endPos = e.pos() - self._startPos
    #         self.move(self.pos() + self._endPos)
    #
    # def mousePressEvent(self, e: QMouseEvent):
    #     if e.button() == Qt.LeftButton:
    #         self._startPos = QPoint(e.x(), e.y())
    #         self._tracking = True
    #
    # def mouseReleaseEvent(self, e: QMouseEvent):
    #     if e.button() == Qt.LeftButton:
    #         self._tracking = False
    #         self._startPos = None
    #         self._endPos = None


from PyQt5.QtWidgets import QApplication, QMainWindow
import  sys
# if __name__ == '__main__':
#     # MainWindow = QtWidgets.QMainWindow()
#     # ui = UI_Progress()
#     # ui.setupUi(MainWindow)
#     # MainWindow.show()
#     app = QApplication(sys.argv)
#     MainWindow = MyWindow()
#     uipi = UI_Progress()
#     uipi.set_loader()
#     uipi.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec())




